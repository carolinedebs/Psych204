/* 
*  Authors: Caroline Debs and Julia Rosedale
*  Description: Get data from real users of GoodReads site
*  Date: November/December 2017
*  Note: To run this program, use the command: webppl test.wppl --require webppl-csv
*/


var getResults = function() { 
	

	/***** Read in the ratings.csv to get (A) a random user and (B) the books that person has rated. *****/

	var user_id = ratings[JSON.stringify(randomInteger(30000))][1]; // Good to test: 21733, 35259, 5885, 23497
	display("User ID: " + user_id);
	var users_books = map(function(x) { if (x[1] === user_id) return x; }, ratings);
	var users_books = remove(undefined, users_books);
	var random = randomInteger(users_books.length - 1);
	var plucked = users_books[random];
	var users_books = remove(users_books[random], users_books);
	display("Read " + users_books.length + " books");


	if (users_books.length > 7) {


		/***** Read in books_tags.csv to get tag info on each book the user has rated *****/

		var user_books_only = map(function(x) { return x[0]; }, users_books);
		var each_book_tags = filter(function(x) {if (user_books_only.indexOf(x[0]) !== -1) return x;}, book_tags)
		var each_book_tags = remove(undefined, each_book_tags);
		var classics = filter(function(x) {if (x[1] === classics) return x;}, each_book_tags);
		var fantasy = filter(function(x) {if (x[1] === fantasy) return x;}, each_book_tags); 
		var fic = filter(function(x) {if (x[1] === fiction) return x;}, each_book_tags);
		var nfic = filter(function(x) {if (x[1] === non_fiction) return x;}, each_book_tags);
		var ya = filter(function(x) {if (x[1] === young_adult) return x;}, each_book_tags);
		var scifi = filter(function(x) {if (x[1] === science_fiction) return x;}, each_book_tags);
		var mystery = filter(function(x) {if (x[1] === mystery) return x;}, each_book_tags);
		var humor = filter(function(x) {if (x[1] === humor) return x;}, each_book_tags);


		/***** Get the top genre preferences of the user *****/

		var all = [classics.length, fantasy.length, fic.length, nfic.length, ya.length, scifi.length, mystery.length, humor.length];
		var all = sort(all, gt);
		if (all[0] == classics.length) display("User genre preference: " + genrepref);
		if (all[0] == fantasy.length) display("User genre preference: " + genrepref);
		if (all[0] == fic.length) display("User genre preference: " + genrepref);
		if (all[0] == nfic.length) display("User genre preference: " + genrepref);
		if (all[0] == ya.length) display("User genre preference: " + genrepref);
		if (all[0] == scifi.length) display("User genre preference: " + genrepref);
		if (all[0] == mystery.length) display("User genre preference: " + genrepref);
		if (all[0] == humor.length) display("User genre preference: " + genrepref);
		

		/***** Get the popularity rating of the user (popular books (500k+ ratings) / all books on shelf) *****/

		var each_book = filter(function(x) {if (user_books_only.indexOf(x[0]) !== -1) return x;}, books);
		var each_book = filter(function(x) {if (x[13] > 500000) return x;}, each_book);
		var bandwagoner_ratio = each_book.length / user_books_only.length;

		display("User bandwagon ratio: " + bandwagoner_ratio);

		/***** Get popularity and genre of plucked book *****/

		var plucked_book = map(function(x) { return x[0]; }, plucked);
		var each_book_tags = filter(function(x) {if (plucked_book.indexOf(x[0]) !== -1) return x;}, book_tags)
		var classics = filter(function(x) {if (x[1] === classics) return x;}, each_book_tags);
		var fantasy = filter(function(x) {if (x[1] === fantasy) return x;}, each_book_tags); 
		var fic = filter(function(x) {if (x[1] === fiction) return x;}, each_book_tags);
		var nfic = filter(function(x) {if (x[1] === non_fiction) return x;}, each_book_tags);
		var ya = filter(function(x) {if (x[1] === young_adult) return x;}, each_book_tags);
		var scifi = filter(function(x) {if (x[1] === science_fiction) return x;}, each_book_tags);
		var mystery = filter(function(x) {if (x[1] === mystery) return x;}, each_book_tags);
		var humor = filter(function(x) {if (x[1] === humor) return x;}, each_book_tags);
		var all = [classics.length, fantasy.length, fic.length, nfic.length, ya.length, scifi.length, mystery.length, humor.length];
		var all = sort(all, gt);

		if (all[0] == classics.length) display("Plucked book genre: " + genrepref);
		if (all[0] == fantasy.length) display("Plucked book genre: " + genrepref);
		if (all[0] == fic.length) display("Plucked book genre: " + genrepref);
		if (all[0] == nfic.length) display("Plucked book genre: " + genrepref);
		if (all[0] == ya.length) display("Plucked book genre: " + genrepref);
		if (all[0] == scifi.length) display("Plucked book genre: " + genrepref);
		if (all[0] == mystery.length) display("Plucked book genre: " + genrepref);
		if (all[0] == humor.length) display("Plucked book genre: " + genrepref);

		var each_book = filter(function(x) {if (plucked[0] == x[0]) return x;}, books);
		var each_book = filter(function(x) {if (x[13] > 500000) return x;}, each_book);

		display("Plucked book popularity: " + each_book.length)

	} else {

		getResults();

	}
}

/***** The reference numbers for each of the 10 most popular tags *****/
var classics        = '7457';
var fantasy         = '11305';
var fiction         = '11743';
var non_fiction     = '21689';
var young_adult     = '33114';
var science_fiction = '26837';
var mystery         = '20939';
var humor           = '15048';

/***** The CSV files *****/
var ratings   = csv.read('ratings.csv');
var book_tags = csv.read('book_tags.csv');
var books     = csv.read('books.csv');

Infer({method: 'forward', samples: 5}, function(){return getResults()});
